package output

import (
	"fmt"
	"time"

	"github.com/c2h5oh/datasize"
	"github.com/gosuri/uitable"
	"mmesh.dev/m-api-go/grpc/resources/account"
	"mmesh.dev/m-cli/pkg/output"
	"mmesh.dev/m-lib/pkg/utils/colors"
)

func showTraffic(traffic *account.Traffic) {
	if traffic == nil {
		return
	}

	output.SubTitleT2("Network Traffic")

	// traffic history
	t := uitable.New()
	t.MaxColWidth = 16
	t.Wrap = false
	t.RightAlign(1)
	t.RightAlign(2)
	t.RightAlign(3)

	t.AddRow(output.TableHeader("Month"), output.TableHeader("Tx Total"), output.TableHeader("Rx Total"), output.TableHeader("Dropped Pkts"))
	t.AddRow(colors.Black("-----"), colors.Black("--------"), colors.Black("--------"), colors.Black("------------"))

	for month, nh := range traffic.NetworkMonthlyHistory {
		t.AddRow(
			colors.DarkWhite(month),
			datasize.ByteSize(nh.TxTotalBytes).HumanReadable(),
			datasize.ByteSize(nh.RxTotalBytes).HumanReadable(),
			nh.DroppedPkts,
		)
	}

	fmt.Println(t)
	fmt.Println()

	// totals & monthly
	fmt.Println("Totals")
	fmt.Printf("%s\n\n", colors.Black("======"))

	t = uitable.New()
	t.MaxColWidth = 18
	t.Wrap = false

	atnm := traffic.NetworkMetrics

	t.AddRow(output.TableHeader("Tx Totals"), "", output.TableHeader("Rx Totals"), "")
	t.AddRow(colors.Black("---------"), "", colors.Black("---------"), "")
	t.AddRow(colors.Black("Tx Total Bytes"), colors.DarkWhite(datasize.ByteSize(atnm.TxTotalBytes).HumanReadable()),
		colors.Black("Rx Total Bytes"), colors.DarkWhite(datasize.ByteSize(atnm.RxTotalBytes).HumanReadable()))
	t.AddRow(colors.Black("Tx Total Pkts"), colors.DarkWhite(fmt.Sprintf("%d", atnm.TxTotalPkts)),
		colors.Black("Rx Total Pkts"), colors.DarkWhite(fmt.Sprintf("%d", atnm.RxTotalPkts)))
	t.AddRow()
	t.AddRow(colors.Black("Dropped Pkts"), colors.DarkWhite(fmt.Sprintf("%d", atnm.DroppedPkts)))

	fmt.Println(t)
	fmt.Println()

	// relay service traffic history
	// if len(traffic.MSNetworkMonthlyHistory) > 0 {
	// 	fmt.Println("Managed Service Traffic")
	// 	fmt.Printf("=======================\n\n")

	// 	t = uitable.New()
	// 	t.MaxColWidth = 16
	// 	t.Wrap = false
	// 	t.RightAlign(1)
	// 	t.RightAlign(2)
	// 	t.RightAlign(3)

	// 	t.AddRow("Month", "Tx Total", "Rx Total", "Dropped Pkts")
	// 	t.AddRow("-----", "--------", "--------", "------------")
	// 	for month, rsnh := range traffic.MSNetworkMonthlyHistory {
	// 		t.AddRow(
	// 			colors.DarkWhite(month),
	// 			datasize.ByteSize(rsnh.TxTotalBytes).HumanReadable(),
	// 			datasize.ByteSize(rsnh.RxTotalBytes).HumanReadable(),
	// 			rsnh.DroppedPkts,
	// 		)
	// 	}

	// 	fmt.Println(t)
	// 	fmt.Println()
	// }

	if traffic.LastUpdated > 0 {
		t := uitable.New()
		t.MaxColWidth = 60
		t.Wrap = false

		tm := time.Unix(traffic.LastUpdated, 0)
		t.AddRow(colors.Black("Last Updated"), colors.DarkWhite(tm.String()))

		fmt.Println(t)
		fmt.Println()
	}
}
