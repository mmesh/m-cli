project_name: mmesh-cli

dist: _dist

env_files:
  github_token: ~/.cloud/github/github_token.buildbot

env:
  - GO111MODULE=on
  # - PKG_REPO='mmesh'
  # - PKG_REPO_DEV='mmesh-dev'

before:
  hooks:
    # you may remove this if you don't use vgo
    #- go mod tidy -v
    # you may remove this if you don't need go generate
    #- go generate ./...

builds:
- id: "mmesh-cli"
  main: cmd/cli/main.go
  binary: mmeshctl
  flags:
    #- -tags=dev
    - -tags="static_build,netgo"
    - -v
    - -a
    - -mod=vendor
    - -installsuffix=netgo
    - -trimpath
    #- -race # requires CGO_ENABLED=1
  # Custom ldflags templates.
  # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
  ldflags:
    - -s
    - -w
    - -X mmesh.dev/m-lib/pkg/version.GitRepository={{.GitURL}}
    - -X mmesh.dev/m-lib/pkg/version.GitCommit={{.ShortCommit}}
    - -X mmesh.dev/m-lib/pkg/version.VersionNumber={{.Tag}}
    - -X mmesh.dev/m-lib/pkg/version.VersionDate={{.Env.VERSION_DATE}}
    - -X mmesh.dev/m-lib/pkg/version.GoVersion={{.Env.GO_VERSION}}
    - -extldflags -static
    #- ./usemsan=-msan
  env:
    - CGO_ENABLED=0
  goos:
    - linux
    - darwin
    - windows
  goarch:
    - amd64
    - arm64
  # lang: go

snapshot:
  # name_template: '{{ .Tag }}-SNAPSHOT-{{.ShortCommit}}'
  # name_template: '{{ .Version }}-SNAPSHOT-{{.ShortCommit}}'
  name_template: '{{ .Version }}-{{.Env.VERSION_DATE}}-SNAPSHOT-{{.ShortCommit}}'

checksum:
  # name_template: '{{ .ProjectName }}_{{ .Tag }}_checksums.txt'
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256

signs:
  - cmd: cosign
    stdin: '{{ .Env.COSIGN_PWD }}'
    args: ["sign-blob", "--key=/cosign/cosign.key", "--output=${signature}", "${artifact}"]
    artifacts: all

sboms:
  - artifacts: archive

archives:
- id: mmesh-cli
  builds:
    - mmesh-cli
  # name_template: "{{ .ProjectName }}ctl_{{ .Tag }}_{{ .Os }}_{{ .Arch }}"
  # name_template: "{{ .ProjectName }}ctl_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
  name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
  wrap_in_directory: false
  format: tar.gz
  format_overrides:
    - goos: windows
      format: zip
  # files:
  #   - ./_dist/*.sig

nfpms:
  - id: mmesh-cli
    package_name: mmesh-cli
    # file_name_template: "{{ .ProjectName }}ctl_{{ .Tag }}_{{ .Os }}_{{ .Arch }}"
    # file_name_template: "{{ .ProjectName }}ctl_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    file_name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    # file_name_template: "{{ .ProjectName }}ctl_{{ .Arch }}"
    builds:
      - mmesh-cli
    vendor: mmesh.io
    homepage: https://mmesh.io
    maintainer: buildbot <no-reply@mmesh.io>
    description: |-
      mmesh command line interface
      mmesh command line interface for interacting with the mmesh multi-cloud integration platform.
    license: "Apache License 2.0"
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    section: default
    priority: extra
    meta: false
    contents:
      # basic files that apply to all packagers
      - src: ./README.md
        dst: /usr/share/doc/mmeshctl/README.md
      - src: ./LICENSE
        dst: /usr/share/doc/mmeshctl/LICENSE

dockers:
  - dockerfile: ./build/package/dockerfiles/dockerfile-cli
    image_templates:
      - "mmeshdev/mmeshctl:latest"
      - "mmeshdev/mmeshctl:stable"
      - "mmeshdev/mmeshctl:{{ .Tag }}"
      - "mmeshdev/mmeshctl:{{ .Tag }}-{{ .Env.GO_VERSION }}"
      - "mmeshdev/mmeshctl:v{{ .Major }}"
      - "mmeshdev/mmeshctl:v{{ .Major }}.{{ .Minor }}"
    use: docker
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.name={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
      - "--rm"
      - "--force-rm"
      - "--no-cache"

release:
  github:
    owner: mmesh
    name: m-cli
  draft: false
  prerelease: auto # auto | true | false
  name_template: '{{.Tag}}'
  disable: false
  # extra_files:
  #   - glob: _dist/*.sig

changelog:
  skip: false
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - '^wip'
    - '^\[wip\]'
    - '^Bump version'

# publishers:
#   # dev repos
#   - name: repo.mmesh.dev/apt
#     cmd: ./scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}ctl_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.deb' '{{.Env.PKG_REPO_DEV}}'
#   - name: repo.mmesh.dev/yum
#     cmd: ./scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}ctl_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.rpm' '{{.Env.PKG_REPO_DEV}}'
#   # stable repos
#   - name: repo.mmesh.io/apt
#     cmd: ./scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}ctl_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.deb' '{{.Env.PKG_REPO}}'
#   - name: repo.mmesh.io/yum
#     cmd: ./scripts/_local/build/pkg-upload.sh '{{ dir .ArtifactPath }}/{{ .ProjectName }}ctl_{{ .Tag }}_{{ .Os }}_{{ .Arch }}.rpm' '{{.Env.PKG_REPO}}'
